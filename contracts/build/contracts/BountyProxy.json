{
  "contractName": "BountyProxy",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "impl",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_impl",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060405160208061023783398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101b4806100836000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638abf60771461010c575b34801561004d57600080fd5b506000807c0100000000000000000000000000000000000000000000000000000000026000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156100c157600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000813683855af43d806000843e8160008114610108578184f35b8184fd5b34801561011857600080fd5b50610121610163565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820068691aaf7cce6dfce8de8609ce094ade893fa118ad4e8a4f3a9d442ffefe5e10029",
  "deployedBytecode": "0x608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638abf60771461010c575b34801561004d57600080fd5b506000807c0100000000000000000000000000000000000000000000000000000000026000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156100c157600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000813683855af43d806000843e8160008114610108578184f35b8184fd5b34801561011857600080fd5b50610121610163565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820068691aaf7cce6dfce8de8609ce094ade893fa118ad4e8a4f3a9d442ffefe5e10029",
  "sourceMap": "28:879:3:-;;;105:92;8:9:-1;5:2;;;30:1;27;20:12;5:2;105:92:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;156:5;149:4;;:12;;;;;;;;;;;;;;;;;;105:92;28:879;;;;;;",
  "deployedSourceMap": "28:879:3:-;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28:879:3;434:13;423:3;412:14;;:7;;;;:14;;;;;404:23;;;;;;;;450:4;;;;;;;;;;;434:20;;496:4;490:11;530:12;527:1;522:3;509:34;614:1;609:3;595:12;590:3;583:5;578:3;565:51;636:14;681:4;678:1;673:3;658:28;703:6;722:1;717:28;;;;775:4;770:3;763:17;717:28;738:4;733:3;726:17;81:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;81:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.23;\r\n\r\ncontract BountyProxy {\r\n  //address public owner;\r\n  address public impl;\r\n  constructor (address _impl) public {\r\n      impl = _impl;\r\n      //owner == msg.sender;\r\n  }\r\n  /**\r\n  * @dev Fallback function allowing to perform a delegatecall to the given implementation.\r\n  * This function will return whatever the implementation call returns\r\n  */\r\n  function () public {\r\n    require(msg.sig != 0x0);\r\n    address _impl = impl;\r\n    assembly {\r\n      let ptr := mload(0x40)\r\n      calldatacopy(ptr, 0, calldatasize)\r\n      let result := delegatecall(gas, _impl, ptr, calldatasize, ptr, 0)\r\n      let size := returndatasize\r\n      returndatacopy(ptr, 0, size)\r\n\r\n      switch result\r\n      case 0 { revert(ptr, size) }\r\n      default { return(ptr, size) }\r\n    }\r\n  }\r\n\r\n  /*\r\n  function upgrade(address _impl) {\r\n    require(msg.sender == owner);\r\n    impl = _impl;\r\n  }\r\n  */\r\n}\r\n\r\n\r\n\r\n\r\n//For the lunch session:\r\n// Calling functions on a contract is abstract for\r\n// Sending messages to an address on the blockchain\r\n// Of type contract (there is regular wallet addresses too)\r\n// This address contains the bytecode of the contract\r\n// In reality messages are sent to the contract address with a calldata\r\n// Here msg.sig represents the first 4 bytes of the calldata\r\n// Which represents the function signatures (bytes4(keccak256(myFunction())))\r\n// When msg is broadcast to peers they see that the receiver is a contract address\r\n// They will execute the bytecode associated with that receiver contract address\r\n// Along with the calldata in the message\r\n// The transaction is accepted when all the peers have the same output\r\n",
  "sourcePath": "C:\\Users\\N.vergauwen\\desktop\\knuckles.eth\\contracts\\contracts\\BountyProxy.sol",
  "ast": {
    "absolutePath": "/C/Users/N.vergauwen/desktop/knuckles.eth/contracts/contracts/BountyProxy.sol",
    "exportedSymbols": {
      "BountyProxy": [
        835
      ]
    },
    "id": 836,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 806,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 835,
        "linearizedBaseContracts": [
          835
        ],
        "name": "BountyProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 808,
            "name": "impl",
            "nodeType": "VariableDeclaration",
            "scope": 835,
            "src": "81:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 807,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "81:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 817,
              "nodeType": "Block",
              "src": "140:57:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 813,
                      "name": "impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "149:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 814,
                      "name": "_impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "156:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "149:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "149:12:3"
                }
              ]
            },
            "documentation": null,
            "id": 818,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "name": "_impl",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "118:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:15:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "140:0:3"
            },
            "scope": 835,
            "src": "105:92:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 833,
              "nodeType": "Block",
              "src": "397:397:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 822,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4010,
                            "src": "412:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "412:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "423:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "412:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4013,
                        4014
                      ],
                      "referencedDeclaration": 4013,
                      "src": "404:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "404:23:3"
                },
                {
                  "assignments": [
                    829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 829,
                      "name": "_impl",
                      "nodeType": "VariableDeclaration",
                      "scope": 834,
                      "src": "434:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 828,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "434:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 831,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 830,
                    "name": "impl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 808,
                    "src": "450:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "434:20:3"
                },
                {
                  "externalReferences": [
                    {
                      "_impl": {
                        "declaration": 829,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "583:5:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 832,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), _impl, ptr, calldatasize(), ptr, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "461:333:3"
                }
              ]
            },
            "documentation": "@dev Fallback function allowing to perform a delegatecall to the given implementation.\r\nThis function will return whatever the implementation call returns\r",
            "id": 834,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:0:3"
            },
            "scope": 835,
            "src": "378:416:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 836,
        "src": "28:879:3"
      }
    ],
    "src": "0:1659:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/N.vergauwen/desktop/knuckles.eth/contracts/contracts/BountyProxy.sol",
    "exportedSymbols": {
      "BountyProxy": [
        835
      ]
    },
    "id": 836,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 806,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 835,
        "linearizedBaseContracts": [
          835
        ],
        "name": "BountyProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 808,
            "name": "impl",
            "nodeType": "VariableDeclaration",
            "scope": 835,
            "src": "81:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 807,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "81:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 817,
              "nodeType": "Block",
              "src": "140:57:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 813,
                      "name": "impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 808,
                      "src": "149:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 814,
                      "name": "_impl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "156:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "149:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "149:12:3"
                }
              ]
            },
            "documentation": null,
            "id": 818,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 810,
                  "name": "_impl",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "118:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:15:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "140:0:3"
            },
            "scope": 835,
            "src": "105:92:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 833,
              "nodeType": "Block",
              "src": "397:397:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 822,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4010,
                            "src": "412:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "412:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "423:3:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        },
                        "src": "412:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4013,
                        4014
                      ],
                      "referencedDeclaration": 4013,
                      "src": "404:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "404:23:3"
                },
                {
                  "assignments": [
                    829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 829,
                      "name": "_impl",
                      "nodeType": "VariableDeclaration",
                      "scope": 834,
                      "src": "434:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 828,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "434:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 831,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 830,
                    "name": "impl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 808,
                    "src": "450:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "434:20:3"
                },
                {
                  "externalReferences": [
                    {
                      "_impl": {
                        "declaration": 829,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "583:5:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 832,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), _impl, ptr, calldatasize(), ptr, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "461:333:3"
                }
              ]
            },
            "documentation": "@dev Fallback function allowing to perform a delegatecall to the given implementation.\r\nThis function will return whatever the implementation call returns\r",
            "id": 834,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:0:3"
            },
            "scope": 835,
            "src": "378:416:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 836,
        "src": "28:879:3"
      }
    ],
    "src": "0:1659:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-12T12:37:21.330Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}